# Complete nginx configuration for Layer Values Dashboard
# Save as /etc/nginx/sites-available/layer-dashboard
# Then: sudo ln -s /etc/nginx/sites-available/layer-dashboard /etc/nginx/sites-enabled/
# And: sudo nginx -t && sudo systemctl reload nginx

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/layer-dashboard.access.log main;
    error_log /var/log/nginx/layer-dashboard.error.log;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=refresh_limit:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=60r/m;
    
    # Server configuration
    server {
        listen 80;
        server_name localhost;  # Replace with your domain name (e.g., dashboard.yourdomain.com)
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Mobile-optimized gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/js
            text/xml
            text/javascript
            application/javascript
            application/json
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        # Static assets with long-term caching
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            root /home/admin/layer-values-dashboard/frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Security for static files
            add_header X-Frame-Options "DENY" always;
        }
        
        # API endpoints with rate limiting
        location /dashboard/api/ {
            # Apply general API rate limiting
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://127.0.0.1:8000/dashboard/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Mobile-optimized timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Disable caching for API responses
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            
            # Mobile detection headers
            proxy_set_header Connection-Type $http_connection_type;
            proxy_set_header User-Agent $http_user_agent;
            
            # Buffer settings for large responses
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # Special rate limiting for refresh endpoint
        location /dashboard/api/refresh {
            limit_req zone=refresh_limit burst=3 nodelay;
            
            proxy_pass http://127.0.0.1:8000/dashboard/api/refresh;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header User-Agent $http_user_agent;
            
            # Longer timeout for refresh operations
            proxy_connect_timeout 15s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Dashboard static files (served by backend)
        location /dashboard/static/ {
            proxy_pass http://127.0.0.1:8000/dashboard/static/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static files served by backend
            expires 1h;
            add_header Cache-Control "public";
            add_header Vary "Accept-Encoding";
        }
        
        # Dashboard main routes
        location /dashboard/ {
            proxy_pass http://127.0.0.1:8000/dashboard/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Mobile detection
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header Connection-Type $http_connection_type;
            
            # Optimized timeouts for mobile
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_cache_bypass $http_upgrade;
            
            # Ensure HTML is not cached
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        }
        
        # Root redirect to dashboard
        location = / {
            return 301 /dashboard/;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Favicon handling
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
            return 200 "User-agent: *\nDisallow: /dashboard/api/\n";
            add_header Content-Type text/plain;
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
        
        # Security: block common attack patterns
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to backup files
        location ~* \.(bak|backup|swp|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
} 